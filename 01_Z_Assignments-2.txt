Learning Objectives:-
Install Ansible on the control node.
Configure the `ansible` user on the control node for ssh shared key access to managed nodes. Do not use a passphrase for the key pair.
Create a simple Ansible inventory on the control node in `/home/ansible/inventory` containing `node1` and `node2`.
Configure sudo access for Ansible on `node1` and `node2` such that Ansible may use sudo for any command with no password prompt.
Verify each managed node is able to be accessed by Ansible from the control node using the `ping` module. Redirect the output of a successful command to `/home/ansible/output`.


Additional Information:-
Your CIO has greenlit a proof of concept for Ansible in your environment. You are to set up an Ansible control node in a test environment and verify basic functionality. You have three demo hosts, one to be the control node (control1), and two to serve as managed nodes (node1 and node2). You must complete the following steps:

1. Install Ansible on the control node.
2. Configure the ansible user on the control node for ssh shared key access to managed nodes.
	Note: do not use a passphrase for the key pair.
3. Create a simple Ansible inventory on the control node in /home/ansible/inventory containing node1 and node2.
4. Configure sudo access for Ansible on node1 and node2 so that Ansible may use sudo for any command with no password prompt.
5. Verify each managed node can be accessed by Ansible from the control node using the ping module. Redirect the output of a successful command to /home/ansible/output.

Important Notes:
You might have to create user "ansible" on all servers.
The ansible user has the same password as the cloud_user.
/etc/hosts entries must be present on control1 for the managed nodes.

-----------------------------------------

Solution :: -


1. Install Ansible on the control node.

[ansible@Ansible-control-node ~]$ ansible --version
ansible 2.9.9
  config file = /home/ansible/ansible.cfg
  configured module search path = [u'/home/ansible/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.16 (default, Dec 12 2019, 23:58:22) [GCC 7.3.1 20180712 (Red Hat 7.3.1-6)]
[ansible@Ansible-control-node ~]$


2. Configure the ansible user on the control node for ssh shared key access to managed nodes.
Note: do not use a passphrase for the key pair.


[ansible@Ansible-control-node ~]$ id -a ansible
uid=1001(ansible) gid=1001(ansible) groups=1001(ansible)
[ansible@Ansible-control-node ~]$

[ansible@Ansible-control-node ~]$ cd /home/ansible/.ssh/
[ansible@Ansible-control-node .ssh]$
[ansible@Ansible-control-node .ssh]$
[ansible@Ansible-control-node .ssh]$ ssh-keygen -t rsa

[ansible@Ansible-control-node .ssh]$ ls -lthr
total 12K
-rw-r--r-- 1 ansible ansible  404 Jun  11 10:45 id_rsa.pub
-rw------- 1 ansible ansible 1.7K Jun  11 10:45 id_rsa
-rw-r--r-- 1 ansible ansible  523 Jun  11 11:46 known_hosts
[ansible@Ansible-control-node .ssh]$

Note : Edit the /etc/ssh/sshd_config file to enable PasswordAuthentication from no to yes, AuthorizedKeysFile .ssh/authorized_keys  and PubkeyAuthentication yes

[ansible@ip-10-10-10-163 ~]$ sudo cat /etc/sudoers |grep -i ansible
## Ansible Sudo Access
ansible       ALL=(ALL)       NOPASSWD: ALL
[ansible@ip-10-10-10-163 ~]$


3. Create a simple Ansible inventory on the control node in /home/ansible/inventory containing node1 and node2.

[ansible@Ansible-control-node ~]$ cat /home/ansible/inventory
node1
node2
[ansible@Ansible-control-node ~]$


4. Configure sudo access for Ansible on node1 and node2 so that Ansible may use sudo for any command with no password prompt.

Node-1 Configurastion:
---------------------

[ansible@node1 .ssh]$ sudo cat /etc/sudoers |grep -i ansible
# Configuring Sudo Access to Ansible on Node-1
ansible  ALL=(ALL)       NOPASSWD: ALL
[ansible@node1 .ssh]$

[ansible@Ansible-control-node .ssh]$ ssh node1
Last login: Thu Jun  11 07:18:02 2020 from ip-10-10-10-163.ec2.internal

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
4 package(s) needed for security, out of 8 available
Run "sudo yum update" to apply all updates.
[ansible@node1 ~]$


Node-2 Configuration:
--------------------

[ansible@node2 ~]$ sudo cat /etc/sudoers |grep -i ansible
# Configuring sudo access to Ansible on Node2
ansible ALL=(ALL)       NOPASSWD: ALL
[ansible@node2 ~]$

[ansible@Ansible-control-node .ssh]$ ssh node2
Last login: Thu Jun  11 07:56:33 2020 from ip-10-10-10-163.ec2.internal

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
4 package(s) needed for security, out of 8 available
Run "sudo yum update" to apply all updates.
[ansible@node2 ~]$


5. Verify each managed node can be accessed by Ansible from the control node using the ping module. Redirect the output of a successful command to /home/ansible/output.

[ansible@Ansible-Server ~]$ ansible all -m ping
node2 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
node1 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
[ansible@Ansible-Server ~]$

Redirected the output of a successful command to /home/ansible/output.


[ansible@Ansible-Server ~]$ ansible all -m ping >> /home/ansible/output
[ansible@Ansible-Server ~]$

[ansible@Ansible-Server ~]$ cat /home/ansible/output
node2 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
node1 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
[ansible@Ansible-Server ~]$
